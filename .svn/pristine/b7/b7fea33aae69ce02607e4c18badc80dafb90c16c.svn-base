/**
 * 
 */
package com.android.smartmobile.cz.view.pop;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.android.smartmobile.cz.R;
import com.android.smartmobile.cz.adapter.ExAdapter;
import com.android.smartmobile.cz.adapter.ExListTypeAdapter;
import com.android.smartmobile.cz.adapter.ResultListAdapter;
import com.android.smartmobile.cz.bean.Catalog;
import com.android.smartmobile.cz.bean.GroupLayer;
import com.android.smartmobile.cz.bean.Layer;
import com.android.smartmobile.cz.finals.Constants;
import com.android.smartmobile.cz.interf.InitActivity;
import com.android.smartmobile.cz.model.BaseActivity;
import com.android.smartmobile.cz.model.MyApplication;
import com.android.smartmobile.cz.service.PullParseConfigMapService;
import com.android.smartmobile.cz.service.PullParseConfigService;
import com.android.smartmobile.cz.util.LogUtil;
import com.android.smartmobile.cz.util.ToastUtil;
import com.android.smartmobile.cz.view.MainMapView;
import com.esri.android.map.MapView;
import com.esri.android.map.ags.ArcGISDynamicMapServiceLayer;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.graphics.Color;
import android.graphics.drawable.BitmapDrawable;
import android.os.Handler;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.AdapterView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.AbsListView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ExpandableListView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.Spinner;

/**
 * 
 * @ClassName: PopListManager
 * @Description:
 * @author Administrator
 * @date 2013年8月3日 下午19:52:17
 * @Company: www.shdci.com
 * @Copyright: Copyright (c) 2013 All rights reserved.
 * @version
 */
public class PopListManager implements InitActivity, OnTouchListener {
	private Context mContext;
	private MapView mainMapView = null;
	// 声明PopupWindow对象的引用
	private PopupWindow popupWindow = null;
	// private Spinner mSpinner;
	private EditText edit_search;
	private Button btn_list_type;
	private ListView mListView;
	private String[] presidents;
	private ResultListAdapter resultListAdapter;
	private List<String> mList;
	private List<Catalog> catalogs = null;
	private Handler mHandler = new Handler();

	public void setPopupWindow(PopupWindow popupWindow) {
		this.popupWindow = popupWindow;
	}

	/**
	 * 
	 * @param context
	 * @param mainMapView
	 */
	public PopListManager(Context context, MapView mainMapView) {
		// TODO Auto-generated constructor stub
		this.mContext = context;
		this.mainMapView = mainMapView;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.android.smartmobile.cz.interf.InitActivity#initData()
	 */
	@Override
	public void initData() {
		// TODO Auto-generated method stub
		mList = new ArrayList<String>();
		// for (int i = 0; i < 30; i++) {
		// mList.add(i + ".this is a test ");
		// }

		presidents = mContext.getResources().getStringArray(
				R.array.presidents_array);

		try {
			//PullParseConfigMapService.getInstance();
			
			catalogs = PullParseConfigMapService.getCatalogs();

			mList = catalogs.get(0).getGroupLayers().get(0).toList();
			
			
			Map<String, Layer> map=PullParseConfigMapService.getLayers();
			LogUtil.LoLoLog().d(map.size());
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	/***
	 * 获取PopupWindow实例
	 */
	public PopupWindow getPopupWindow() {
		return popupWindow;
	}

	/**
	 * 创建PopupWindow
	 */
	@Override
	public void initView() {

		initData();
		// TODO Auto-generated method stub

		// 获取自定义布局文件pop.xml的视图
		View popupWindow_view = LayoutInflater.from(mContext).inflate(
				R.layout.pop_list, null, false);
		// 创建PopupWindow实例,200,150分别是宽度和高度
		popupWindow = new PopupWindow(popupWindow_view, 400,
				LayoutParams.MATCH_PARENT);
		// MyApplication.mApp.popupWindows.add(popupWindow);
		// 设置动画效果
		popupWindow.setAnimationStyle(R.style.AnimationFade);
		popupWindow.setOutsideTouchable(true);
		popupWindow.setFocusable(true);
		popupWindow.update();
		// 点击其他地方消失

		popupWindow.getContentView().setOnTouchListener(new OnTouchListener() {
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				if (event.getAction() == MotionEvent.ACTION_UP) {
					popupWindow.setFocusable(false);
					popupWindow.setOutsideTouchable(true);
				} else if (event.getAction() == MotionEvent.ACTION_OUTSIDE) {
					popupWindow.setFocusable(false);
					popupWindow.setOutsideTouchable(false);
				} else {
					popupWindow.setFocusable(true);
				}
				popupWindow.update();
				return false;
			}
		});

		// pop.xml视图里面的控件
		mListView = (ListView) popupWindow_view.findViewById(R.id.lv_list);
		mListView.setDivider(null);
		// mSpinner = (Spinner)
		// popupWindow_view.findViewById(R.id.spinner_list);
		btn_list_type = (Button) popupWindow_view
				.findViewById(R.id.btn_list_type);
		btn_list_type
				.setText(catalogs.get(0).getGroupLayers().get(0).getName());
		btn_list_type.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub

				mHandler.postDelayed(new Runnable() {
					@Override
					public void run() {
						showListTypePopWindow();
					}
				}, 200);
			}
		});
		edit_search = (EditText) popupWindow_view.findViewById(R.id.edit_list);
		//resultListAdapter = new ResultListAdapter(mContext, mList);
		//mListView.setAdapter(resultListAdapter);

		mListView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				// if (null != popupWindow) {
				// popupWindow.setFocusable(false);
				// popupWindow.setOutsideTouchable(false);
				// popupWindow.update();
				// }

				// popupWindow.setFocusable(true);
				// popupWindow.update();
				// TODO Auto-generated method stub
				ToastUtil.makeToastInBottom(mList.get(arg2));
				LogUtil.LoLoLog().d(mList.get(arg2));
			}
		});

		// ArrayAdapter<String> adapter = new ArrayAdapter<String>(mContext,
		// android.R.layout.simple_spinner_item, presidents);
		// mSpinner.setAdapter(adapter);
		//
		// mSpinner.setOnItemSelectedListener(new OnItemSelectedListener() {
		// @Override
		// public void onItemSelected(AdapterView<?> arg0, View arg1,
		// int arg2, long arg3) {
		// int index = arg0.getSelectedItemPosition();
		// // ToastUtil.makeToastInBottom("You have selected item : "
		// // + presidents[index]);
		// }
		//
		// @Override
		// public void onNothingSelected(AdapterView<?> arg0) {
		// }
		// });

		popupWindow_view.findViewById(R.id.btn_list_close).setOnClickListener(
				new OnClickListener() {

					@Override
					public void onClick(View v) {
						// TODO Auto-generated method stub
						if (popupWindow != null && popupWindow.isShowing()) {
							popupWindow.dismiss();
							popupWindow = null;
						}
					}
				});

		// setPopFocusable();
	}

	void setPopFocusable() {
		// edit_search.setOnTouchListener(this);

		edit_search.setOnFocusChangeListener(new OnFocusChangeListener() {
			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				if (hasFocus) {
					popupWindow.setFocusable(true);
					popupWindow.update();

				} else {
					popupWindow.setFocusable(false);
					popupWindow.setOutsideTouchable(false);
					popupWindow.update();

				}
			}
		});

		// mSpinner.setOnTouchListener(this);
		mListView.setOnTouchListener(this);

		mListView.setOnScrollListener(new OnScrollListener() {

			@Override
			public void onScrollStateChanged(AbsListView view, int scrollState) {
				// TODO Auto-generated method stub
				switch (scrollState) {
				case OnScrollListener.SCROLL_STATE_IDLE:
					popupWindow.setFocusable(false);
					popupWindow.setOutsideTouchable(false);
					popupWindow.update();

					break;
				case OnScrollListener.SCROLL_STATE_TOUCH_SCROLL:
					popupWindow.setFocusable(true);
					popupWindow.update();

					break;
				case OnScrollListener.SCROLL_STATE_FLING:
					popupWindow.setFocusable(false);
					popupWindow.setOutsideTouchable(false);
					popupWindow.update();

					break;
				default:
					popupWindow.setFocusable(true);
					popupWindow.update();

					break;
				}
			}

			@Override
			public void onScroll(AbsListView view, int firstVisibleItem,
					int visibleItemCount, int totalItemCount) {
				// TODO Auto-generated method stub
				popupWindow.update();

			}
		});

		// mSpinner.setOnFocusChangeListener(new OnFocusChangeListener() {
		// @Override
		// public void onFocusChange(View v, boolean hasFocus) {
		// if (hasFocus) {
		// popupWindow.setFocusable(true);
		// popupWindow.update();
		//
		// } else {
		// popupWindow.setFocusable(false);
		// popupWindow.setOutsideTouchable(false);
		// popupWindow.update();
		//
		// }
		// }
		// });
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.android.smartmobile.cz.interf.InitActivity#clearView()
	 */
	@Override
	public void clearView() {
		// TODO Auto-generated method stub

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see android.view.View.OnTouchListener#onTouch(android.view.View,
	 * android.view.MotionEvent)
	 */
	@Override
	public boolean onTouch(View v, MotionEvent event) {
		if (event.getAction() == MotionEvent.ACTION_UP) {
			popupWindow.setFocusable(false);
			popupWindow.setOutsideTouchable(false);
		} else {
			popupWindow.setFocusable(true);
			// popupWindow.setOutsideTouchable(true);
		}
		popupWindow.update();
		return true;

	}

	void showListTypePopWindow() {
		View popupWindow_view = LayoutInflater.from(mContext).inflate(
				R.layout.dialog_list_type, null, false);
		// 创建PopupWindow实例,200,150分别是宽度和高度
		PopupWindow popup = new PopupWindow(popupWindow_view, 300, 500);
		
		// 设置动画效果
		popup.setBackgroundDrawable(new BitmapDrawable());
		// popup.setAnimationStyle(R.style.AnimationFade);
		popup.setOutsideTouchable(true);
		popup.setFocusable(true);
		popup.update();
		int[] location = new int[2];

		btn_list_type.getLocationOnScreen(location);
		popup.showAtLocation(Constants.ll_left_menu, Gravity.NO_GRAVITY,
				location[0] + 360, location[1]);

		ExpandableListView expandableListView = (ExpandableListView) popupWindow_view
				.findViewById(R.id.ex_pop_list_type);
		expandableListView.setGroupIndicator(null);// 取消默认的ExpandableListview的默认指示的图标;;;
		expandableListView.setAdapter(new ExListTypeAdapter(mContext, catalogs,
				mainMapView));
		expandableListView.setOnChildClickListener(new OnChildClickListener() {

			@Override
			public boolean onChildClick(ExpandableListView parent, View v,
					int groupPosition, int childPosition, long id) {
				// TODO Auto-generated method stub
				GroupLayer groupLayer = catalogs.get(groupPosition)
						.getGroupLayers().get(childPosition);
				mList = groupLayer.toList();
				int size = mList.size();
//				resultListAdapter = new ResultListAdapter(mContext, mList);
//				mListView.setAdapter(resultListAdapter);
				btn_list_type.setText(groupLayer.getName());
				return true;
			}
		});
		// 将所有项设置成默认展开

		expandableListView.setDivider(null);

		int groupCount = expandableListView.getCount();

		for (int i = 0; i < groupCount; i++) {
			expandableListView.expandGroup(i);
		}
	}
}
